var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require('angular2/core');
var common_1 = require('angular2/common');
var desktop_1 = require('../../desktop/desktop/desktop');
var taskbar_1 = require('../../desktop/taskbar/taskbar');
var file_browser_1 = require('../../desktop/application/file-browser');
var photo_browser_1 = require('../../desktop/application/photo-browser');
var terminal_1 = require('../../desktop/application/terminal');
var video_player_1 = require('../../desktop/application/video-player');
var dock_1 = require('../../desktop/taskbar/dock');
var menu_1 = require('../../desktop/menu/menu');
var http_1 = require('angular2/http');
var FileBrowserAppCmp = (function () {
    function FileBrowserAppCmp(http) {
        var _this = this;
        this.http = http;
        this._id = 'desktop';
        this.backgroundImage = '/resource/images/img1.jpg';
        this.fileBrowsers = [];
        this.photoBrowsers = [];
        this.videoPlayer = [];
        this.menus = menu_1.menuList;
        this.terminals = [];
        this.shortcuts = [];
        this.docks = [];
        this.idIndex = 0;
        this.iconMap = {
            'inode/directory': 'icon-folder',
            'text/plain': 'icon-textfile',
            'image/png': 'icon-image',
            'image/jpeg': 'icon-image',
            'application/ogg': 'icon-video'
        };
        this.createApp('menu', this.menus, {
            top: 100,
            left: 100,
            items: [{
                    text: "新建",
                    items: [{
                            text: "文件夹",
                            handler: function () {
                                alert('wenjianjia');
                            }
                        }, {
                            text: "文本",
                            handler: function () {
                            }
                        }],
                    handler: function (event) {
                        alert(1);
                    }
                }, {
                    text: "New File2",
                    handler: function (event) {
                        alert(2);
                    }
                }, {
                    text: "New File3",
                    handler: function (event) {
                        alert(3);
                    }
                }]
        });
        this.shortcuts = [{
                icon: 'icon-computer',
                text: '这台电脑',
                shadow: 'shadow',
                dblclick: function () {
                    var config = {
                        title: '这台电脑',
                        path: '/'
                    };
                    _this.createApp('file-browser', _this.fileBrowsers, _this.getFileBrowserConfig(config));
                }
            }, {
                icon: 'icon-user',
                text: '我的文档',
                shadow: 'shadow',
                dblclick: function () {
                    var config = {
                        title: '我的文档',
                        path: '/root'
                    };
                    _this.createApp('file-browser', _this.fileBrowsers, _this.getFileBrowserConfig(config));
                }
            }, {
                icon: 'icon-terminal',
                text: 'Terminal',
                shadow: 'shadow',
                dblclick: function () {
                    _this.createApp('terminal', _this.terminals, { icon_class: 'icon-terminal' });
                }
            }];
    }
    FileBrowserAppCmp.prototype.createApp = function (type, list, config) {
        if (config === void 0) { config = {}; }
        var id = type + '-' + this.idIndex++;
        list.push(_.extend(config, {
            _id: id,
            type: type,
            componentList: list
        }));
        var isFind = false;
        dock_1.dockAppList.forEach(function (item, index) {
            if (item._id === type)
                isFind = true;
        });
        if (!isFind)
            dock_1.dockAppList.push({ _id: type, items: list, icon: 'task-icon-' + type });
    };
    FileBrowserAppCmp.prototype.lsByPath = function (path, done) {
        var res = this.http.get('/ls/ubuntu?path=' + path);
        res.subscribe(function (res) {
            console.log(111);
            if (res.status !== 200)
                return alert('error');
            var list = res.json();
            done(null, list);
        });
    };
    FileBrowserAppCmp.prototype.getFileBrowserConfig = function (_config) {
        var _this = this;
        if (_config === void 0) { _config = {}; }
        var config = _.extend({
            onSetPath: function (path) {
                _this.lsByPath(path, function (err, list) {
                    list.forEach(function (item) {
                        item.text = item.name;
                        item.icon = _this.iconMap[item.type];
                        if (!item.icon)
                            item.icon = 'icon-file';
                        if (item.type === 'inode/directory') {
                            item.dblclick = function () {
                                config['object']['setPath']((path === '/' ? '' : path) + '/' + item.name);
                            };
                        }
                        if (/image\/*/.test(item.type)) {
                            item.dblclick = function () {
                                _this.createApp('photo-browser', _this.photoBrowsers, { title: item.name, url: '/getFile?url=' + item.path + '&type=' + item.type });
                            };
                        }
                        if (item.type === 'application/ogg') {
                            item.dblclick = function () {
                                _this.createApp('video-player', _this.videoPlayer, { url: 'http://127.0.0.1:8088/getFile?url=' + item.path + '&type=video/ogg' });
                            };
                        }
                    });
                    config.fileList = list;
                });
            },
            fileList: []
        }, _config);
        return config;
    };
    FileBrowserAppCmp = __decorate([
        core_1.Component({
            selector: 'file-browser-app',
            template: "\n        <file-browser *ngFor=\"#item of fileBrowsers\" [config]=\"item\" ></file-browser>\n    ",
            directives: [common_1.NgFor, desktop_1.DesktopCmp, taskbar_1.TaskbarCmp, file_browser_1.FileBrowserCmp, photo_browser_1.PhotoBrowserCmp, terminal_1.TerminalCmp, video_player_1.VideoPlayerCmp, menu_1.MenuCmp],
            viewProviders: [http_1.HTTP_PROVIDERS],
        }), 
        __metadata('design:paramtypes', [http_1.Http])
    ], FileBrowserAppCmp);
    return FileBrowserAppCmp;
})();
exports.FileBrowserAppCmp = FileBrowserAppCmp;

//# sourceMappingURL=data:application/json;base64,
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require('angular2/core');
var common_1 = require('angular2/common');
var start_1 = require('./start');
var dock_1 = require('./dock');
var TaskbarCmp = (function () {
    function TaskbarCmp() {
        this._id = 'taskbar';
    }
    __decorate([
        core_1.Input(), 
        __metadata('design:type', Object)
    ], TaskbarCmp.prototype, "docks", void 0);
    TaskbarCmp = __decorate([
        core_1.Component({
            selector: 'taskbar',
            template: "\n        <div id=\"{{_id}}\" class=\"bottomBar\"> \n            <div class=\"backgroundDiv\"> \n                <start></start> \n                <div class=\"task-work\"><div></div></div> \n                <dock [docks]=\"docks\"></dock> \n                <div class=\"task-clock\"> \n                    <div>4:49</div> \n                    <div>2015/5/9</div> \n                </div> \n            </div> \n        </div> \n    ",
            styles: ["\n\n      .task-start .start-button{\n          background-image:url(\"../../resource/images/start.png\");\n          background-size: contain;\n          float: left;\n          width: 50px;\n          height: 40px;\n      }\n\n      .task-start .start-button:hover{\n          transition: 0.5s linear;\n          background-image:url(\"../../resource/images/start-hover.png\");\n      }\n\n      .task-start .task-search{\n          float: left;\n          margin-left: 5px;\n      /*    background: rgba(48,74,109,0.9);*/\n      }\n\n      .task-start .task-search input{\n          height: 28px;\n          width: 300px;\n          background: rgba(82,101,127,1);\n          border: 0px;\n          font-size: 14px;\n          padding-left: 5px;\n          margin: 5px 12px;\n      } \n\n      .task-start .task-search input:focus{\n          background:none;\n          background: #fff;\n          outline:none;\n      }\n\n      .task-work{\n          float: left;\n          width: 50px;\n          height: 50px;\n      }\n\n      .task-work div{\n          width: 50px;\n          height: 50px;\n          background-image:url(\"../../resource/images/work.png\");\n      }\n\n      .task-work:hover{\n          transition: 0.2s linear;\n          background: none repeat scroll 0 0 rgba(255, 255, 255, 0.1);\n      }\n\n      .task-clock{\n          float:right;\n          color:#fff;\n          width:75px;\n          text-align: center;\n          font-size: 13px;\n          margin-right: 5px;\n      }\n\n      .task-clock div{\n          margin-top: 3px;\n      }\n    "],
            directives: [common_1.NgStyle, start_1.StartCmp, dock_1.DockCmp]
        }), 
        __metadata('design:paramtypes', [])
    ], TaskbarCmp);
    return TaskbarCmp;
})();
exports.TaskbarCmp = TaskbarCmp;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRlc2t0b3AvdGFza2Jhci90YXNrYmFyLnRzIl0sIm5hbWVzIjpbIlRhc2tiYXJDbXAiLCJUYXNrYmFyQ21wLmNvbnN0cnVjdG9yIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSxxQkFBK0IsZUFBZSxDQUFDLENBQUE7QUFDL0MsdUJBQXNCLGlCQUFpQixDQUFDLENBQUE7QUFFeEMsc0JBQXlCLFNBQVMsQ0FBQyxDQUFBO0FBQ25DLHFCQUF3QixRQUFRLENBQUMsQ0FBQTtBQUNqQztJQXdGSUE7UUFGQUMsUUFBR0EsR0FBR0EsU0FBU0EsQ0FBQ0E7SUFJaEJBLENBQUNBO0lBSEREO1FBQUNBLFlBQUtBLEVBQUVBOztPQUFDQSw2QkFBS0EsVUFBQ0E7SUF2Rm5CQTtRQUFDQSxnQkFBU0EsQ0FBQ0E7WUFDUEEsUUFBUUEsRUFBRUEsU0FBU0E7WUFDbkJBLFFBQVFBLEVBQUVBLG9iQVlUQTtZQUNEQSxNQUFNQSxFQUFFQSxDQUFDQSxrakRBa0VSQSxDQUFDQTtZQUNGQSxVQUFVQSxFQUFFQSxDQUFDQSxnQkFBT0EsRUFBRUEsZ0JBQVFBLEVBQUVBLGNBQU9BLENBQUNBO1NBQzNDQSxDQUFDQTs7bUJBUURBO0lBQURBLGlCQUFDQTtBQUFEQSxDQTNGQSxBQTJGQ0EsSUFBQTtBQU5ZLGtCQUFVLGFBTXRCLENBQUEiLCJmaWxlIjoiZGVza3RvcC90YXNrYmFyL3Rhc2tiYXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgSW5wdXR9IGZyb20gJ2FuZ3VsYXIyL2NvcmUnO1xuaW1wb3J0IHtOZ1N0eWxlfSBmcm9tICdhbmd1bGFyMi9jb21tb24nO1xuXG5pbXBvcnQgeyBTdGFydENtcCB9IGZyb20gJy4vc3RhcnQnO1xuaW1wb3J0IHsgRG9ja0NtcCB9IGZyb20gJy4vZG9jayc7XG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ3Rhc2tiYXInLFxuICAgIHRlbXBsYXRlOiBgXG4gICAgICAgIDxkaXYgaWQ9XCJ7e19pZH19XCIgY2xhc3M9XCJib3R0b21CYXJcIj4gXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiYmFja2dyb3VuZERpdlwiPiBcbiAgICAgICAgICAgICAgICA8c3RhcnQ+PC9zdGFydD4gXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInRhc2std29ya1wiPjxkaXY+PC9kaXY+PC9kaXY+IFxuICAgICAgICAgICAgICAgIDxkb2NrIFtkb2Nrc109XCJkb2Nrc1wiPjwvZG9jaz4gXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInRhc2stY2xvY2tcIj4gXG4gICAgICAgICAgICAgICAgICAgIDxkaXY+NDo0OTwvZGl2PiBcbiAgICAgICAgICAgICAgICAgICAgPGRpdj4yMDE1LzUvOTwvZGl2PiBcbiAgICAgICAgICAgICAgICA8L2Rpdj4gXG4gICAgICAgICAgICA8L2Rpdj4gXG4gICAgICAgIDwvZGl2PiBcbiAgICBgLFxuICAgIHN0eWxlczogW2BcblxuICAgICAgLnRhc2stc3RhcnQgLnN0YXJ0LWJ1dHRvbntcbiAgICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOnVybChcIi4uLy4uL3Jlc291cmNlL2ltYWdlcy9zdGFydC5wbmdcIik7XG4gICAgICAgICAgYmFja2dyb3VuZC1zaXplOiBjb250YWluO1xuICAgICAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgICAgIHdpZHRoOiA1MHB4O1xuICAgICAgICAgIGhlaWdodDogNDBweDtcbiAgICAgIH1cblxuICAgICAgLnRhc2stc3RhcnQgLnN0YXJ0LWJ1dHRvbjpob3ZlcntcbiAgICAgICAgICB0cmFuc2l0aW9uOiAwLjVzIGxpbmVhcjtcbiAgICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOnVybChcIi4uLy4uL3Jlc291cmNlL2ltYWdlcy9zdGFydC1ob3Zlci5wbmdcIik7XG4gICAgICB9XG5cbiAgICAgIC50YXNrLXN0YXJ0IC50YXNrLXNlYXJjaHtcbiAgICAgICAgICBmbG9hdDogbGVmdDtcbiAgICAgICAgICBtYXJnaW4tbGVmdDogNXB4O1xuICAgICAgLyogICAgYmFja2dyb3VuZDogcmdiYSg0OCw3NCwxMDksMC45KTsqL1xuICAgICAgfVxuXG4gICAgICAudGFzay1zdGFydCAudGFzay1zZWFyY2ggaW5wdXR7XG4gICAgICAgICAgaGVpZ2h0OiAyOHB4O1xuICAgICAgICAgIHdpZHRoOiAzMDBweDtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiByZ2JhKDgyLDEwMSwxMjcsMSk7XG4gICAgICAgICAgYm9yZGVyOiAwcHg7XG4gICAgICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgICAgIHBhZGRpbmctbGVmdDogNXB4O1xuICAgICAgICAgIG1hcmdpbjogNXB4IDEycHg7XG4gICAgICB9IFxuXG4gICAgICAudGFzay1zdGFydCAudGFzay1zZWFyY2ggaW5wdXQ6Zm9jdXN7XG4gICAgICAgICAgYmFja2dyb3VuZDpub25lO1xuICAgICAgICAgIGJhY2tncm91bmQ6ICNmZmY7XG4gICAgICAgICAgb3V0bGluZTpub25lO1xuICAgICAgfVxuXG4gICAgICAudGFzay13b3Jre1xuICAgICAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgICAgIHdpZHRoOiA1MHB4O1xuICAgICAgICAgIGhlaWdodDogNTBweDtcbiAgICAgIH1cblxuICAgICAgLnRhc2std29yayBkaXZ7XG4gICAgICAgICAgd2lkdGg6IDUwcHg7XG4gICAgICAgICAgaGVpZ2h0OiA1MHB4O1xuICAgICAgICAgIGJhY2tncm91bmQtaW1hZ2U6dXJsKFwiLi4vLi4vcmVzb3VyY2UvaW1hZ2VzL3dvcmsucG5nXCIpO1xuICAgICAgfVxuXG4gICAgICAudGFzay13b3JrOmhvdmVye1xuICAgICAgICAgIHRyYW5zaXRpb246IDAuMnMgbGluZWFyO1xuICAgICAgICAgIGJhY2tncm91bmQ6IG5vbmUgcmVwZWF0IHNjcm9sbCAwIDAgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjEpO1xuICAgICAgfVxuXG4gICAgICAudGFzay1jbG9ja3tcbiAgICAgICAgICBmbG9hdDpyaWdodDtcbiAgICAgICAgICBjb2xvcjojZmZmO1xuICAgICAgICAgIHdpZHRoOjc1cHg7XG4gICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgIGZvbnQtc2l6ZTogMTNweDtcbiAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDVweDtcbiAgICAgIH1cblxuICAgICAgLnRhc2stY2xvY2sgZGl2e1xuICAgICAgICAgIG1hcmdpbi10b3A6IDNweDtcbiAgICAgIH1cbiAgICBgXSxcbiAgICBkaXJlY3RpdmVzOiBbTmdTdHlsZSwgU3RhcnRDbXAsIERvY2tDbXBdXG59KVxuXG5leHBvcnQgY2xhc3MgVGFza2JhckNtcCB7XG4gICAgX2lkID0gJ3Rhc2tiYXInO1xuICAgIEBJbnB1dCgpIGRvY2tzO1xuICAgIGNvbnN0cnVjdG9yKCl7XG4gICAgICAgIFxuICAgIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==